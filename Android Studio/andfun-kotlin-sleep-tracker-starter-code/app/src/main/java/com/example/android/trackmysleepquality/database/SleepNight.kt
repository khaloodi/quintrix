/*
 * Copyright 2018, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.example.android.trackmysleepquality.database
/*
 * Copyright 2018, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.room.ColumnInfo
import androidx.room.Entity // automatically added by IDE when using annotation
import androidx.room.PrimaryKey // automatically added by IDE when primary key added

// to make SleepNight a class that room can use to create a table, we need to annotate it

// we want to give our table a custom name, a name that's different
// from the default of deriving it from the class name...
// we do this by adding parameters to the annotation and setting the table name parameter
@Entity(tableName =  "daily_sleep_quality_table") // changing the table name is optional
// create a data class to define our sleep data entity
data class SleepNight (
    @PrimaryKey(autoGenerate = true) // primary key is required, added autogenerate parameter
    var nightId: Long = 0L, // var parameter variable for the id, has to be a long because the key is autogenerated
    // it has to be initialized so it is given the value "0" or "0L",

    // ANNOTATE REMAINING COLUMNS WITH ASSOCIATED NAMES USING @COLUMNINFO AND (name= "column name") parameter
    @ColumnInfo(name = "start_time_milli")
    // now we had a parameter for the start time:
    var startTimeMilli: Long = System.currentTimeMillis(),// for when user presses start button to start recording

    @ColumnInfo(name = "end_time_milli")
    // parameter variable for the end time:
    var endTimeMilli: Long = startTimeMilli,

    @ColumnInfo(name = "quality_rating")
    // the sleepQuality rating which is initially set to -1 before user clicks rating
    var sleepQuality: Int = -1 // indicates no sleep quality has been recorded yet
)